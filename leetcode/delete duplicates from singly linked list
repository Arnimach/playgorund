# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
  
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        # if the head is not None, update it
        if head:
            cur = head
            next_node = cur.next
            while next_node:
                # if the next_node and cur node have equal values
                # update pointer for the cur node 
                if next_node.val != cur.val:
                    cur = next_node
                # Otherwise update the next pointer of the cur node
                else:
                    cur.next = next_node.next
                next_node = cur.next
        
        return head        
